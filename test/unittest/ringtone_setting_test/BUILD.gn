# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/ringtone_library/ringtone_library.gni")

group("unittest") {
  testonly = true

  deps = [ ":ringtone_setting_unittest" ]
}

ohos_unittest("ringtone_setting_unittest") {
  module_out_path = "ringtone_library/ringtone_library"

  include_dirs = [
    "./include",
    "${RINGTONE_EXTENSION_PATH}/include",
    "${RINGTONE_SERVICES_PATH}/utils/include",
    "${RINGTONE_INTERFACES_PATH}/inner_api/native",
    "${RINGTONE_SCANNER_PATH}/include",
    "${RINGTONE_RESTORE_PATH}/include",
    "${RINGTONE_UTILS_PATH}/include",
  ]

  sources = [
    "${RINGTONE_SERVICES_PATH}/utils/src/permission_utils.cpp",
    "./src/ringtone_metadata_test.cpp",
    "./src/ringtone_setting_manager_test.cpp",
  ]

  deps = [
    "${RINGTONE_ROOT_PATH}/services:ringtone_data_extension",
    "${RINGTONE_ROOT_PATH}/services:ringtone_setting",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "data_share:datashare_common",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "napi:ace_napi",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "samgr:samgr_proxy",
  ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  if (is_standard_system) {
    external_deps += [ "hilog:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
}
